<?php

namespace Proxies\__CG__\ZonaComix\WebsiteBundle\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Comic extends \ZonaComix\WebsiteBundle\Entity\Comic implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'readings', 'user', '' . "\0" . 'ZonaComix\\WebsiteBundle\\Entity\\Comic' . "\0" . 'followers', 'chapters', 'id', 'title', 'description', 'license', 'rating', 'genre', 'style');
        }

        return array('__isInitialized__', 'readings', 'user', '' . "\0" . 'ZonaComix\\WebsiteBundle\\Entity\\Comic' . "\0" . 'followers', 'chapters', 'id', 'title', 'description', 'license', 'rating', 'genre', 'style');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Comic $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function setTitle($title)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setTitle', array($title));

        return parent::setTitle($title);
    }

    /**
     * {@inheritDoc}
     */
    public function getTitle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getTitle', array());

        return parent::getTitle();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setLicense($license)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLicense', array($license));

        return parent::setLicense($license);
    }

    /**
     * {@inheritDoc}
     */
    public function getLicense()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLicense', array());

        return parent::getLicense();
    }

    /**
     * {@inheritDoc}
     */
    public function setRating($rating)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setRating', array($rating));

        return parent::setRating($rating);
    }

    /**
     * {@inheritDoc}
     */
    public function getRating()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getRating', array());

        return parent::getRating();
    }

    /**
     * {@inheritDoc}
     */
    public function setGenre($genre)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setGenre', array($genre));

        return parent::setGenre($genre);
    }

    /**
     * {@inheritDoc}
     */
    public function getGenre()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getGenre', array());

        return parent::getGenre();
    }

    /**
     * {@inheritDoc}
     */
    public function setStyle($style)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setStyle', array($style));

        return parent::setStyle($style);
    }

    /**
     * {@inheritDoc}
     */
    public function getStyle()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getStyle', array());

        return parent::getStyle();
    }

    /**
     * {@inheritDoc}
     */
    public function setUser(\ZonaComix\WebsiteBundle\Entity\User $user = NULL)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setUser', array($user));

        return parent::setUser($user);
    }

    /**
     * {@inheritDoc}
     */
    public function getUser()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUser', array());

        return parent::getUser();
    }

    /**
     * {@inheritDoc}
     */
    public function addFollower(\ZonaComix\WebsiteBundle\Entity\User $followers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addFollower', array($followers));

        return parent::addFollower($followers);
    }

    /**
     * {@inheritDoc}
     */
    public function removeFollower(\ZonaComix\WebsiteBundle\Entity\User $followers)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeFollower', array($followers));

        return parent::removeFollower($followers);
    }

    /**
     * {@inheritDoc}
     */
    public function getFollowers()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFollowers', array());

        return parent::getFollowers();
    }

    /**
     * {@inheritDoc}
     */
    public function addChapter(\ZonaComix\WebsiteBundle\Entity\Chapter $chapters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addChapter', array($chapters));

        return parent::addChapter($chapters);
    }

    /**
     * {@inheritDoc}
     */
    public function removeChapter(\ZonaComix\WebsiteBundle\Entity\Chapter $chapters)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeChapter', array($chapters));

        return parent::removeChapter($chapters);
    }

    /**
     * {@inheritDoc}
     */
    public function getChapters()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getChapters', array());

        return parent::getChapters();
    }

    /**
     * {@inheritDoc}
     */
    public function addReading(\ZonaComix\WebsiteBundle\Entity\Reading $readings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addReading', array($readings));

        return parent::addReading($readings);
    }

    /**
     * {@inheritDoc}
     */
    public function removeReading(\ZonaComix\WebsiteBundle\Entity\Reading $readings)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeReading', array($readings));

        return parent::removeReading($readings);
    }

    /**
     * {@inheritDoc}
     */
    public function getReadings()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getReadings', array());

        return parent::getReadings();
    }

}
